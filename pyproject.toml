[project]
name = "pystac_monty"
description = "Python library for working with the SpatioTemporal Asset Catalog (STAC) extension for Montandon"
readme = "README.md"
authors = [{ name = "Emmanuel Mathot", email = "emmanuel.mathot@gmail.com" }]
keywords = [
    "pystac",
    "disaster",
    "hazard",
    "catalog",
    "STAC",
    "Montandon",
    "Monty",
]
license = { text = "Apache-2.0" }
classifiers = [
    "Development Status :: 0 - Proposal",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.10"
dependencies = [
    "python-dateutil>=2.7.0",
    "pystac>=1.11.0",
    "geojson>=2.5.0",
    "markdownify>=0.14.1",
    "pytz>=2021.1",
    "pandas>=2.2.0",
    "shapely>=2.0.0",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://pystac.readthedocs.io"
Repository = "https://github.com/IFRCGo/monty-stac-extension"
Issues = "https://github.com/IFRCGo/monty-stac-extension/issues"
Changelog = "https://github.com/IFRCGo/monty-stac-extension/blob/main/CHANGELOG.md"
Discussions = "https://github.com/radiantearth/stac-spec/discussions/categories/stac-software"

[tool.coverage.run]
branch = true
source = ["pystac_monty"]
# omit = ["pystac/extensions/label.py"]

[tool.coverage.report]
fail_under = 90
exclude_lines = ["if TYPE_CHECKING:"]

[tool.doc8]
ignore-path = ["docs/_build", "docs/tutorials"]
max-line-length = 88

[tool.mypy]
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = ["jinja2"]
ignore_missing_imports = true

[tool.ruff]
line-length = 130
lint.select = ["E", "F", "I"]

[tool.pytest.ini_options]
filterwarnings = ["error"]

[tool.setuptools.packages.find]
include = ["pystac_monty*"]
exclude = ["tests*"]

[tool.setuptools.dynamic]
version = { attr = "pystac_monty.extension.__version__" }

[tool.black]
line-length = 130
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | \.db
  | _build
  | buck-out
  | build
  | dist
  | docs
)/
'''
# NOTE: Update in .pre-commit-config.yaml as well
extend-exclude = "^.*\\b(migrations)\\b.*$ (__pycache__|.+/+.+/+migrations/+.*)"

[tool.isort]
profile = "black"
multi_line_output = 3
# NOTE: Update in .pre-commit-config.yaml as well
skip = [
    "**/__pycache__",
    ".venv/",
]

[tool.uv]
dev-dependencies = [
    "codespell<2.3",
    "coverage>=7.6.2",
    "doc8>=1.1.2",
    "html5lib>=1.1",
    "jinja2>=3.1.4",
    "jsonschema>=4.23.0",
    "mypy>=1.11.2",
    "orjson>=3.10.7",
    "packaging>=24.1",
    "parameterized",
    "pre-commit>=4.0.1",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-recording>=0.13.2",
    "requests>=2.32.3",
    "ruff>=0.6.9",
    "types-html5lib>=1.1.11.20240806",
    "types-jsonschema>=4.23.0.20240813",
    "types-orjson>=3.6.2",
    "types-python-dateutil>=2.9.0.20241003",
    "types-urllib3>=1.26.25.14",
    "virtualenv>=20.26.6",
]

[tool.uv.workspace]
members = ["docs"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
